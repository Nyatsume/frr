yang/frr-pim.yang:80:  grouping global-pim-config-attributes {
yang/frr-pim.yang:157:  grouping per-af-global-pim-config-attributes {
yang/frr-pim.yang:329:  } // per-af-global-pim-config-attributes
yang/frr-pim.yang:331:  grouping interface-pim-config-attributes {
yang/frr-pim.yang:335:    leaf pim-enable {
yang/frr-pim.yang:429:  } // interface-pim-config-attributes
yang/frr-pim.yang:431:  grouping per-af-interface-pim-config-attributes {
yang/frr-pim.yang:470:  } // per-af-interface-pim-config-attributes
yang/frr-pim.yang:486:      uses global-pim-config-attributes;
yang/frr-pim.yang:493:        uses per-af-global-pim-config-attributes;
yang/frr-pim.yang:506:      uses interface-pim-config-attributes;
yang/frr-pim.yang:512:        uses per-af-interface-pim-config-attributes;
yang/frr-zebra.yang:212:      enum "pim-sm" {
yang/frr-zebra.yang:215:          "Multicast PIM-SM.";
yang/subdir.am:75:dist_yangmodels_DATA += yang/frr-pim-rp.yang
yang/frr-pim-rp.yang:1:module frr-pim-rp {
yang/frr-pim-rp.yang:3:  namespace "http://frrouting.org/yang/pim-rp";
yang/frr-pim-rp.yang:5:  prefix frr-pim-rp;
doc/user/pim.rst:9:*pimd* supports pim-sm as well as igmp v2 and v3. pim is
doc/user/pim.rst:16:   On Linux for PIM-SM operation you *must* have kernel version 4.18 or greater.
doc/user/pim.rst:172:.. _pim-interface-configuration:
doc/user/pim.rst:269:   :ref:`bfd-pim-peer-config`
doc/user/pim.rst:272:.. _pim-multicast-rib:
doc/user/pim.rst:352:.. _show-pim-information:
doc/user/pim.rst:698:   !  - Enable "ip pim ssm" on pim-routers-facing interfaces
doc/user/bfd.rst:339:.. _bfd-pim-peer-config:
doc/user/_build/text/pim.txt:6:*pimd* supports pim-sm as well as igmp v2 and v3. pim is vrf aware and
doc/user/_build/text/pim.txt:13:  On Linux for PIM-SM operation you *must* have kernel version 4.18 or
doc/user/_build/text/pim.txt:714:   !  - Enable "ip pim ssm" on pim-routers-facing interfaces
doc/user/_build/html/_sources/bfd.rst.txt:339:.. _bfd-pim-peer-config:
doc/user/_build/texinfo/frr.texi:9056:@anchor{bfd bfd-pim-peer-config}@anchor{25a}@anchor{bfd pim-bfd-configuration}@anchor{25b}
doc/user/_build/texinfo/frr.texi:23840:@emph{pimd} supports pim-sm as well as igmp v2 and v3. pim is
doc/user/_build/texinfo/frr.texi:23847:On Linux for PIM-SM operation you @emph{must} have kernel version 4.18 or greater.
doc/user/_build/texinfo/frr.texi:24092:@anchor{pim id3}@anchor{71a}@anchor{pim pim-interface-configuration}@anchor{71b}
doc/user/_build/texinfo/frr.texi:24241:@anchor{pim id4}@anchor{72c}@anchor{pim pim-multicast-rib}@anchor{72d}
doc/user/_build/texinfo/frr.texi:24346:@anchor{pim id5}@anchor{736}@anchor{pim show-pim-information}@anchor{737}
doc/user/_build/texinfo/frr.texi:24689:@anchor{pim pim-debug-commands}@anchor{763}
doc/user/_build/texinfo/frr.texi:24774:@anchor{pim pim-clear-commands}@anchor{76e}
doc/user/_build/texinfo/frr.texi:24834:@anchor{pim pim-evpn-configuration}@anchor{776}
doc/user/_build/texinfo/frr.texi:24893:!  - Enable "ip pim ssm" on pim-routers-facing interfaces
doc/user/_build/texinfo/frr.info:19280:`pimd' supports pim-sm as well as igmp v2 and v3.  pim is vrf aware and
doc/user/_build/texinfo/frr.info:19285:     Note: On Linux for PIM-SM operation you `must' have kernel version
doc/user/_build/texinfo/frr.info:20028:     !  - Enable "ip pim ssm" on pim-routers-facing interfaces
doc/user/_build/texinfo/frr.info:28599:Ref: bfd bfd-pim-peer-config236715
doc/user/_build/texinfo/frr.info:28601:Ref: bfd pim-bfd-configuration236715
doc/user/_build/texinfo/frr.info:31340:Ref: pim pim-interface-configuration686702
doc/user/_build/texinfo/frr.info:31377:Ref: pim pim-multicast-rib690399
doc/user/_build/texinfo/frr.info:31399:Ref: pim show-pim-information693485
doc/user/_build/texinfo/frr.info:31488:Ref: pim pim-debug-commands700205
doc/user/_build/texinfo/frr.info:31511:Ref: pim pim-clear-commands701915
doc/user/_build/texinfo/frr.info:31528:Ref: pim pim-evpn-configuration702896
doc/user/_build/html/_sources/pim.rst.txt:9:*pimd* supports pim-sm as well as igmp v2 and v3. pim is
doc/user/_build/html/_sources/pim.rst.txt:16:   On Linux for PIM-SM operation you *must* have kernel version 4.18 or greater.
doc/user/_build/html/_sources/pim.rst.txt:172:.. _pim-interface-configuration:
doc/user/_build/html/_sources/pim.rst.txt:269:   :ref:`bfd-pim-peer-config`
doc/user/_build/html/_sources/pim.rst.txt:272:.. _pim-multicast-rib:
doc/user/_build/html/_sources/pim.rst.txt:352:.. _show-pim-information:
doc/user/_build/html/_sources/pim.rst.txt:698:   !  - Enable "ip pim ssm" on pim-routers-facing interfaces
doc/user/_build/html/pim.html:51:<p><em>pimd</em> supports pim-sm as well as igmp v2 and v3. pim is
doc/user/_build/html/pim.html:57:<p class="last">On Linux for PIM-SM operation you <em>must</em> have kernel version 4.18 or greater.
doc/user/_build/html/pim.html:240:<div class="section" id="pim-interface-configuration">
doc/user/_build/html/pim.html:241:<span id="id3"></span><h2>PIM Interface Configuration<a class="headerlink" href="#pim-interface-configuration" title="Permalink to this headline">¶</a></h2>
doc/user/_build/html/pim.html:364:<p class="last"><a class="reference internal" href="bfd.html#bfd-pim-peer-config"><span class="std std-ref">PIM BFD Configuration</span></a></p>
doc/user/_build/html/pim.html:367:<div class="section" id="pim-multicast-rib">
doc/user/_build/html/pim.html:368:<span id="id4"></span><h2>PIM Multicast RIB<a class="headerlink" href="#pim-multicast-rib" title="Permalink to this headline">¶</a></h2>
doc/user/_build/html/pim.html:447:<div class="section" id="show-pim-information">
doc/user/_build/html/pim.html:448:<span id="id5"></span><h2>Show PIM Information<a class="headerlink" href="#show-pim-information" title="Permalink to this headline">¶</a></h2>
doc/user/_build/html/pim.html:741:<div class="section" id="pim-debug-commands">
doc/user/_build/html/pim.html:742:<h2>PIM Debug Commands<a class="headerlink" href="#pim-debug-commands" title="Permalink to this headline">¶</a></h2>
doc/user/_build/html/pim.html:813:<div class="section" id="pim-clear-commands">
doc/user/_build/html/pim.html:814:<h2>PIM Clear Commands<a class="headerlink" href="#pim-clear-commands" title="Permalink to this headline">¶</a></h2>
doc/user/_build/html/pim.html:863:<div class="section" id="pim-evpn-configuration">
doc/user/_build/html/pim.html:864:<h2>PIM EVPN configuration<a class="headerlink" href="#pim-evpn-configuration" title="Permalink to this headline">¶</a></h2>
doc/user/_build/html/pim.html:904:<span class="c c-Singleline">!  - Enable &quot;ip pim ssm&quot; on pim-routers-facing interfaces</span>
doc/user/_build/html/pim.html:932:<li><a class="reference internal" href="#pim-interface-configuration">PIM Interface Configuration</a></li>
doc/user/_build/html/pim.html:933:<li><a class="reference internal" href="#pim-multicast-rib">PIM Multicast RIB</a></li>
doc/user/_build/html/pim.html:935:<li><a class="reference internal" href="#show-pim-information">Show PIM Information</a></li>
doc/user/_build/html/pim.html:936:<li><a class="reference internal" href="#pim-debug-commands">PIM Debug Commands</a></li>
doc/user/_build/html/pim.html:937:<li><a class="reference internal" href="#pim-clear-commands">PIM Clear Commands</a></li>
doc/user/_build/html/pim.html:938:<li><a class="reference internal" href="#pim-evpn-configuration">PIM EVPN configuration</a></li>
doc/user/_build/html/bfd.html:375:<div class="section" id="pim-bfd-configuration">
doc/user/_build/html/bfd.html:376:<span id="bfd-pim-peer-config"></span><h3>PIM BFD Configuration<a class="headerlink" href="#pim-bfd-configuration" title="Permalink to this headline">¶</a></h3>
doc/user/_build/html/bfd.html:721:<li><a class="reference internal" href="#pim-bfd-configuration">PIM BFD Configuration</a></li>
doc/user/_build/html/index.html:284:<li class="toctree-l2"><a class="reference internal" href="pim.html#pim-interface-configuration">PIM Interface Configuration</a></li>
doc/user/_build/html/index.html:285:<li class="toctree-l2"><a class="reference internal" href="pim.html#pim-multicast-rib">PIM Multicast RIB</a></li>
doc/user/_build/html/index.html:287:<li class="toctree-l2"><a class="reference internal" href="pim.html#show-pim-information">Show PIM Information</a></li>
doc/user/_build/html/index.html:288:<li class="toctree-l2"><a class="reference internal" href="pim.html#pim-debug-commands">PIM Debug Commands</a></li>
doc/user/_build/html/index.html:289:<li class="toctree-l2"><a class="reference internal" href="pim.html#pim-clear-commands">PIM Clear Commands</a></li>
doc/user/_build/html/index.html:290:<li class="toctree-l2"><a class="reference internal" href="pim.html#pim-evpn-configuration">PIM EVPN configuration</a></li>
redhat/frr.spec.in:938:-   PIM-BSM receive support
tests/isisd/test_isis_spf.c:552:	SET_FLAG(im->options, F_ISIS_UNIT_TEST);
bgpd/bgp_route.c:116:	{PMSI_TNLTYPE_PIM_SSM, "PIM-SSM"},
bgpd/bgp_route.c:117:	{PMSI_TNLTYPE_PIM_SM, "PIM-SM"},
bgpd/bgp_route.c:118:	{PMSI_TNLTYPE_PIM_BIDIR, "PIM-BIDIR"},
bgpd/bgp_evpn_private.h:99:	/* PIM-SM MDT group for BUM flooding */
bgpd/bgp_evpn.c:2248:	/* if mcast group ip has been specified we use a PIM-SM MDT */
bgpd/bgp_zebra.c:2350:		bgp_pbim->installed = false;
bgpd/bgp_zebra.c:2351:		bgp_pbim->install_in_progress = false;
bgpd/bgp_zebra.c:2354:		bgp_pbim->installed = true;
bgpd/bgp_zebra.c:2355:		bgp_pbim->install_in_progress = false;
bgpd/bgp_zebra.c:2637:	stream_putl(s, pbim->unique);
bgpd/bgp_zebra.c:2638:	stream_putl(s, pbim->type);
bgpd/bgp_zebra.c:2639:	stream_putc(s, pbim->family);
bgpd/bgp_zebra.c:2640:	stream_put(s, pbim->ipset_name,
bgpd/bgp_zebra.c:3193:	if (pbrim->install_in_progress)
bgpd/bgp_zebra.c:3197:			   pbrim->ipset_name, pbrim->type, install,
bgpd/bgp_zebra.c:3198:			   pbrim->unique);
bgpd/bgp_zebra.c:3213:		pbrim->install_in_progress = true;
pimd/pim_nb.h:139:/* frr-pim-rp prototypes*/
pimd/pim_nb.h:192:	"frr-pim-rp:rp/static-rp/rp-list[rp-address='%s']"
pimd/pim_pim.c:371:		ifp = if_lookup_by_index(ifindex, pim_ifp->pim->vrf->vrf_id);
pimd/pim_pim.c:584:	/* TTL for packets destine to ALL-PIM-ROUTERS is 1 */
pimd/pim_igmp.c:820:	++pim_ifp->pim->igmp_group_count;
pimd/pim_igmp.c:821:	if (pim_ifp->pim->igmp_group_count
pimd/pim_igmp.c:822:	    == pim_ifp->pim->igmp_watermark_limit) {
pimd/pim_igmp.c:825:			pim_ifp->pim->igmp_group_count,
pimd/pim_igmp.c:826:			VRF_LOGNAME(pim_ifp->pim->vrf));
pimd/pim_igmp.c:837:	if (pim_ifp->pim->igmp_group_count == 0) {
pimd/pim_igmp.c:839:			  VRF_LOGNAME(pim_ifp->pim->vrf));
pimd/pim_igmp.c:843:	--pim_ifp->pim->igmp_group_count;
pimd/pim_macro.c:328:  RFC 4601 4.8.2.  PIM-SSM-Only Routers
pimd/pim_macro.c:331:  simplified in a PIM-SSM-only router:
pimd/pim_ssm.c:58:	struct pim_ssm *ssm = pim->ssm_info;
pimd/pim_ssm.c:97:	ssm = pim->ssm_info;
pimd/pim_ssm.c:115:	if (vrf_id != pim->vrf->vrf_id)
pimd/pim_ssm.c:118:	ssm = pim->ssm_info;
pimd/pim_register.c:61:	pim_channel_add_oif(up->channel_oil, pim->regiface,
pimd/pim_register.c:148:		pim_channel_del_oif(upstream->channel_oil, pim->regiface,
pimd/pim_register.c:389:		if (pim->register_plist) {
pimd/pim_register.c:393:			plist = prefix_list_lookup(AFI_IP, pim->register_plist);
pimd/pim_register.c:490:					upstream, pim->rp_keep_alive_time);
pimd/pim_register.c:493:					upstream, pim->keep_alive_time);
pimd/pim_register.c:536:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_register.c:542:			pim_channel_del_oif(up->channel_oil, pim->regiface,
pimd/pim_tlv.c:107: *       the IANA for PIM-specific Address Families.  Values 251 though
pimd/pim_tlv.c:166: *       For PIM-SM defined in this specification, this bit MUST be zero.
pimd/pim_ssmpingd.c:44:	assert(!pim->ssmpingd_list);
pimd/pim_ssmpingd.c:47:			   &pim->ssmpingd_group_addr);
pimd/pim_ssmpingd.c:54:	if (pim->ssmpingd_list)
pimd/pim_ssmpingd.c:55:		list_delete(&pim->ssmpingd_list);
pimd/pim_ssmpingd.c:64:	if (!pim->ssmpingd_list)
pimd/pim_ssmpingd.c:67:	for (ALL_LIST_ELEMENTS_RO(pim->ssmpingd_list, node, ss))
pimd/pim_ssmpingd.c:215:	listnode_delete(ss->pim->ssmpingd_list, ss);
pimd/pim_ssmpingd.c:270:	ifp = if_lookup_by_index(ifindex, ss->pim->vrf->vrf_id);
pimd/pim_ssmpingd.c:312:	from.sin_addr = ss->pim->ssmpingd_group_addr;
pimd/pim_ssmpingd.c:345:	if (!pim->ssmpingd_list) {
pimd/pim_ssmpingd.c:346:		pim->ssmpingd_list = list_new();
pimd/pim_ssmpingd.c:347:		pim->ssmpingd_list->del = (void (*)(void *))ssmpingd_free;
pimd/pim_ssmpingd.c:370:	listnode_add(pim->ssmpingd_list, ss);
pimd/pim_rpf.c:45:	pim->last_route_change_time = pim_time_monotonic_usec();
pimd/pim_rpf.c:48:			   __func__, pim->vrf->name,
pimd/pim_rpf.c:49:			   pim->last_route_change_time);
pimd/pim_rpf.c:72:	    && (nexthop->last_lookup_time > pim->last_route_change_time)) {
pimd/pim_rpf.c:83:				pim->last_route_change_time, nexthop_str);
pimd/pim_rpf.c:85:		pim->nexthop_lookups_avoided++;
pimd/pim_rpf.c:95:				pim->last_route_change_time);
pimd/pim_rpf.c:115:		ifp = if_lookup_by_index(first_ifindex, pim->vrf->vrf_id);
pimd/pim_hello.c:512:		if (pim->send_v6_secondary) {
pimd/README:6:	qpimd implements PIM-SM (Sparse Mode) of RFC 4601.
pimd/README:92:	http://www.iana.org/assignments/pim-parameters/pim-parameters.txt
pimd/pim_jp_agg.c:250:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_nb.c:221:			.xpath = "/frr-interface:lib/interface/frr-pim:pim/pim-enable",
pimd/pim_nb.c:339:	.name = "frr-pim-rp",
pimd/pim_nb.c:342:			.xpath = "/frr-routing:routing/control-plane-protocols/control-plane-protocol/frr-pim:pim/address-family/frr-pim-rp:rp/static-rp/rp-list",
pimd/pim_nb.c:349:			.xpath = "/frr-routing:routing/control-plane-protocols/control-plane-protocol/frr-pim:pim/address-family/frr-pim-rp:rp/static-rp/rp-list/group-list",
pimd/pim_nb.c:356:			.xpath = "/frr-routing:routing/control-plane-protocols/control-plane-protocol/frr-pim:pim/address-family/frr-pim-rp:rp/static-rp/rp-list/prefix-list",
pimd/pim_msdp_socket.c:82:	pim->msdp.listener.thread = NULL;
pimd/pim_msdp_socket.c:84:			&pim->msdp.listener.thread);
pimd/pim_msdp_socket.c:97:		++pim->msdp.rejected_accepts;
pimd/pim_msdp_socket.c:135:	struct pim_msdp_listener *listener = &pim->msdp.listener;
pimd/pim_msdp_socket.c:137:	if (pim->msdp.flags & PIM_MSDPF_LISTENER) {
pimd/pim_msdp_socket.c:159:	if (pim->vrf->vrf_id != VRF_DEFAULT) {
pimd/pim_msdp_socket.c:161:			if_lookup_by_name(pim->vrf->name, pim->vrf->vrf_id);
pimd/pim_msdp_socket.c:165:				 __func__, pim->vrf->name);
pimd/pim_msdp_socket.c:209:	thread_add_read(pim->msdp.master, pim_msdp_sock_accept, pim, sock,
pimd/pim_msdp_socket.c:212:	pim->msdp.flags |= PIM_MSDPF_LISTENER;
pimd/pim_msdp_socket.c:246:	if (mp->pim->vrf->vrf_id != VRF_DEFAULT) {
pimd/pim_msdp_socket.c:247:		struct interface *ifp = if_lookup_by_name(mp->pim->vrf->name,
pimd/pim_msdp_socket.c:248:							  mp->pim->vrf->vrf_id);
pimd/pim_msdp_socket.c:252:				 __func__, mp->pim->vrf->name);
pimd/pim_mlag.c:376:	 * pim->upstream_head has the list of *,G and S,G
pimd/pim_mlag.c:390:		frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_mlag.c:425:	struct vrf *vrf = pim->vrf;
pimd/pim_mlag.c:463:	struct vrf *vrf = pim->vrf;
pimd/pim_mlag.c:522:		frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_mlag.c:543:		frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_mlag.c:1010:		pim_ifp->pim->inst_mlag_intf_cnt++;
pimd/pim_mlag.c:1017:			pim_ifp->pim->inst_mlag_intf_cnt);
pimd/pim_mlag.c:1038:	pim_ifp->pim->inst_mlag_intf_cnt--;
pimd/pim_mlag.c:1045:			pim_ifp->pim->inst_mlag_intf_cnt);
pimd/pim_mlag.c:1063:	pim->inst_mlag_intf_cnt = 0;
pimd/pim_mlag.c:1074:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_mlag.c:1082:	pim->inst_mlag_intf_cnt = 0;
pimd/pim_igmp_mtrace.c:600:					     pim->vrf->vrf_id))
pimd/pim_igmp_mtrace.c:776:		/* 7.7.1. PIM-SM ...RP has not performed source-specific join */
pimd/pim_ifchannel.c:938:				ch->upstream, pim_ifp->pim->keep_alive_time);
pimd/pim_ifchannel.c:1255:		if (pim->spt.switchover == PIM_SPT_INFINITY) {
pimd/pim_ifchannel.c:1256:			if (pim->spt.plist) {
pimd/pim_ifchannel.c:1258:					AFI_IP, pim->spt.plist);
pimd/pim_ifchannel.c:1267:						up->channel_oil, pim->regiface,
pimd/pim_ifchannel.c:1273:			pim_channel_add_oif(up->channel_oil, pim->regiface,
pimd/pim_ifchannel.c:1474:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_msdp.c:84:	THREAD_OFF(pim->msdp.sa_adv_timer);
pimd/pim_msdp.c:86:		thread_add_timer(pim->msdp.master, pim_msdp_sa_adv_timer_cb,
pimd/pim_msdp.c:88:				 &pim->msdp.sa_adv_timer);
pimd/pim_msdp.c:110:		thread_add_timer(sa->pim->msdp.master,
pimd/pim_msdp.c:254:	sa = hash_get(pim->msdp.sa_hash, sa, hash_alloc_intern);
pimd/pim_msdp.c:255:	listnode_add_sort(pim->msdp.sa_list, sa);
pimd/pim_msdp.c:270:	return hash_lookup(pim->msdp.sa_hash, &lookup);
pimd/pim_msdp.c:297:	listnode_delete(sa->pim->msdp.sa_list, sa);
pimd/pim_msdp.c:298:	hash_release(sa->pim->msdp.sa_hash, sa);
pimd/pim_msdp.c:355:			if (sa->pim->msdp.local_cnt)
pimd/pim_msdp.c:356:				--sa->pim->msdp.local_cnt;
pimd/pim_msdp.c:418:			++sa->pim->msdp.local_cnt;
pimd/pim_msdp.c:424:			sa->rp = pim->msdp.originator_id;
pimd/pim_msdp.c:447:	if (!(pim->msdp.flags & PIM_MSDPF_ENABLE)) {
pimd/pim_msdp.c:567:	frr_each (rb_pim_upstream, &pim->upstream_head, up)
pimd/pim_msdp.c:579:	if (!(pim->msdp.flags & PIM_MSDPF_ENABLE)) {
pimd/pim_msdp.c:589:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_msdp.c:598:	for (ALL_LIST_ELEMENTS(pim->msdp.sa_list, sanode, nextnode, sa)) {
pimd/pim_msdp.c:638:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_msdp.c:662:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_msdp.c:920:		thread_add_timer(pim->msdp.master, pim_msdp_peer_hold_timer_cb,
pimd/pim_msdp.c:921:				 mp, pim->msdp.hold_time, &mp->hold_timer);
pimd/pim_msdp.c:945:		thread_add_timer(mp->pim->msdp.master,
pimd/pim_msdp.c:947:				 mp->pim->msdp.keep_alive, &mp->ka_timer);
pimd/pim_msdp.c:1009:		thread_add_timer(mp->pim->msdp.master,
pimd/pim_msdp.c:1011:				 mp->pim->msdp.connection_retry, &mp->cr_timer);
pimd/pim_msdp.c:1064:	pim->msdp.originator_id = *local;
pimd/pim_msdp.c:1083:	mp = hash_get(pim->msdp.peer_hash, mp, hash_alloc_intern);
pimd/pim_msdp.c:1084:	listnode_add_sort(pim->msdp.peer_list, mp);
pimd/pim_msdp.c:1107:	return hash_lookup(pim->msdp.peer_hash, &lookup);
pimd/pim_msdp.c:1143:	listnode_delete((*mp)->pim->msdp.peer_list, *mp);
pimd/pim_msdp.c:1144:	hash_release((*mp)->pim->msdp.peer_hash, *mp);
pimd/pim_msdp.c:1220:	SLIST_REMOVE(&pim->msdp.mglist, (*mgp), pim_msdp_mg, mg_entry);
pimd/pim_msdp.c:1240:	SLIST_INSERT_HEAD(&pim->msdp.mglist, mg, mg_entry);
pimd/pim_msdp.c:1311:	if (SLIST_EMPTY(&pim->msdp.mglist))
pimd/pim_msdp.c:1314:	SLIST_FOREACH (mg, &pim->msdp.mglist, mg_entry) {
pimd/pim_msdp.c:1342:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.peer_list, node, mp)) {
pimd/pim_msdp.c:1359:	if (pim->msdp.flags & PIM_MSDPF_ENABLE) {
pimd/pim_msdp.c:1363:	pim->msdp.flags |= PIM_MSDPF_ENABLE;
pimd/pim_msdp.c:1364:	pim->msdp.work_obuf = stream_new(PIM_MSDP_MAX_PACKET_SIZE);
pimd/pim_msdp.c:1373:	pim->msdp.master = master;
pimd/pim_msdp.c:1377:		 pim->vrf->name);
pimd/pim_msdp.c:1378:	pim->msdp.peer_hash = hash_create(pim_msdp_peer_hash_key_make,
pimd/pim_msdp.c:1380:	pim->msdp.peer_list = list_new();
pimd/pim_msdp.c:1381:	pim->msdp.peer_list->del = (void (*)(void *))pim_msdp_peer_free;
pimd/pim_msdp.c:1382:	pim->msdp.peer_list->cmp = (int (*)(void *, void *))pim_msdp_peer_comp;
pimd/pim_msdp.c:1385:		 pim->vrf->name);
pimd/pim_msdp.c:1386:	pim->msdp.sa_hash = hash_create(pim_msdp_sa_hash_key_make,
pimd/pim_msdp.c:1388:	pim->msdp.sa_list = list_new();
pimd/pim_msdp.c:1389:	pim->msdp.sa_list->del = (void (*)(void *))pim_msdp_sa_free;
pimd/pim_msdp.c:1390:	pim->msdp.sa_list->cmp = (int (*)(void *, void *))pim_msdp_sa_comp;
pimd/pim_msdp.c:1401:	while ((mg = SLIST_FIRST(&pim->msdp.mglist)) != NULL)
pimd/pim_msdp.c:1404:	if (pim->msdp.peer_hash) {
pimd/pim_msdp.c:1405:		hash_clean(pim->msdp.peer_hash, NULL);
pimd/pim_msdp.c:1406:		hash_free(pim->msdp.peer_hash);
pimd/pim_msdp.c:1407:		pim->msdp.peer_hash = NULL;
pimd/pim_msdp.c:1410:	if (pim->msdp.peer_list) {
pimd/pim_msdp.c:1411:		list_delete(&pim->msdp.peer_list);
pimd/pim_msdp.c:1414:	if (pim->msdp.sa_hash) {
pimd/pim_msdp.c:1415:		hash_clean(pim->msdp.sa_hash, NULL);
pimd/pim_msdp.c:1416:		hash_free(pim->msdp.sa_hash);
pimd/pim_msdp.c:1417:		pim->msdp.sa_hash = NULL;
pimd/pim_msdp.c:1420:	if (pim->msdp.sa_list) {
pimd/pim_msdp.c:1421:		list_delete(&pim->msdp.sa_list);
pimd/pim_msdp.c:1424:	if (pim->msdp.work_obuf)
pimd/pim_msdp.c:1425:		stream_free(pim->msdp.work_obuf);
pimd/pim_msdp.c:1426:	pim->msdp.work_obuf = NULL;
pimd/pim_oil.c:88:	rb_pim_oil_init(&pim->channel_oil_head);
pimd/pim_oil.c:95:	while ((c_oil = rb_pim_oil_pop(&pim->channel_oil_head)))
pimd/pim_oil.c:98:	rb_pim_oil_fini(&pim->channel_oil_head);
pimd/pim_oil.c:115:	c_oil = rb_pim_oil_find(&pim->channel_oil_head, &lookup);
pimd/pim_oil.c:164:	rb_pim_oil_add(&pim->channel_oil_head, c_oil);
pimd/pim_oil.c:193:		rb_pim_oil_del(&c_oil->pim->channel_oil_head, c_oil);
pimd/pim_oil.c:347:	pim_reg_ifp = pim->regiface->info;
pimd/pim_oil.c:429:	if (c_oil->pim->regiface) {
pimd/pim_oil.c:430:		pim_reg_ifp = c_oil->pim->regiface->info;
pimd/pim_bsm.c:245:	memset(&pim->global_scope, 0, sizeof(struct bsm_scope));
pimd/pim_bsm.c:247:	pim->global_scope.sz_id = PIM_GBL_SZ_ID;
pimd/pim_bsm.c:248:	pim->global_scope.bsrp_table = route_table_init();
pimd/pim_bsm.c:249:	pim->global_scope.accept_nofwd_bsm = true;
pimd/pim_bsm.c:250:	pim->global_scope.state = NO_INFO;
pimd/pim_bsm.c:251:	pim->global_scope.pim = pim;
pimd/pim_bsm.c:252:	bsm_frags_init(pim->global_scope.bsm_frags);
pimd/pim_bsm.c:253:	pim_bs_timer_start(&pim->global_scope, PIM_BS_TIME);
pimd/pim_bsm.c:261:	pim_bs_timer_stop(&pim->global_scope);
pimd/pim_bsm.c:262:	pim_bsm_frags_free(&pim->global_scope);
pimd/pim_bsm.c:264:	for (rn = route_top(pim->global_scope.bsrp_table); rn;
pimd/pim_bsm.c:272:	route_table_finish(pim->global_scope.bsrp_table);
pimd/pim_bsm.c:319:	rn = route_node_lookup(pim->rp_table, &bsgrp_node->group);
pimd/pim_bsm.c:349:		pim_free_bsgrp_node(pim->global_scope.bsrp_table,
pimd/pim_bsm.c:435:	rn = route_node_lookup(pim->rp_table, &bsgrp_node->group);
pimd/pim_bsm.c:554:	if (bsr.s_addr != pim->global_scope.current_bsr.s_addr) {
pimd/pim_bsm.c:577:	if (bsr.s_addr == pim->global_scope.current_bsr.s_addr)
pimd/pim_bsm.c:580:	if (bsr_prio > pim->global_scope.current_bsr_prio)
pimd/pim_bsm.c:583:	else if (bsr_prio == pim->global_scope.current_bsr_prio) {
pimd/pim_bsm.c:585:		    >= ntohl(pim->global_scope.current_bsr.s_addr))
pimd/pim_bsm.c:598:	if (bsr.s_addr != pim->global_scope.current_bsr.s_addr) {
pimd/pim_bsm.c:606:		if (pim->global_scope.current_bsr.s_addr != INADDR_ANY) {
pimd/pim_bsm.c:607:			nht_p.u.prefix4 = pim->global_scope.current_bsr;
pimd/pim_bsm.c:625:		pim->global_scope.current_bsr = bsr;
pimd/pim_bsm.c:626:		pim->global_scope.current_bsr_first_ts =
pimd/pim_bsm.c:628:		pim->global_scope.state = ACCEPT_PREFERRED;
pimd/pim_bsm.c:630:	pim->global_scope.current_bsr_prio = bsr_prio;
pimd/pim_bsm.c:631:	pim->global_scope.current_bsr_last_ts = pim_time_monotonic_sec();
pimd/pim_bsm.c:663:	pim_ifp->pim->bsm_sent++;
pimd/pim_bsm.c:849:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_bsm.c:920:	scope = &pim_ifp->pim->global_scope;
pimd/pim_bsm.c:1025:	uint8_t hashMask_len = pim->global_scope.hashMasklen;
pimd/pim_bsm.c:1237:	pim->bsm_rcvd++;
pimd/pim_bsm.c:1244:		pim->bsm_dropped++;
pimd/pim_bsm.c:1262:		pim->bsm_dropped++;
pimd/pim_bsm.c:1265:	pim->global_scope.hashMasklen = bshdr->hm_len;
pimd/pim_bsm.c:1282:			pim->bsm_dropped++;
pimd/pim_bsm.c:1292:		pim->bsm_dropped++;
pimd/pim_bsm.c:1298:		if ((pim->global_scope.accept_nofwd_bsm)
pimd/pim_bsm.c:1299:		    || (frag_tag == pim->global_scope.bsm_frag_tag)) {
pimd/pim_bsm.c:1300:			pim->global_scope.accept_nofwd_bsm = false;
pimd/pim_bsm.c:1306:			pim->bsm_dropped++;
pimd/pim_bsm.c:1321:				pim->bsm_dropped++;
pimd/pim_bsm.c:1326:					   pim->vrf->vrf_id)) {
pimd/pim_bsm.c:1336:			pim->bsm_dropped++;
pimd/pim_bsm.c:1344:		pim->bsm_dropped++;
pimd/pim_bsm.c:1354:		    &pim_ifp->pim->global_scope,
pimd/pim_bsm.c:1361:		pim->bsm_dropped++;
pimd/pim_bsm.c:1365:	pim_bs_timer_restart(&pim_ifp->pim->global_scope,
pimd/pim_bsm.c:1369:	if (pim_ifp->pim->global_scope.bsm_frag_tag != frag_tag) {
pimd/pim_bsm.c:1373:				   pim_ifp->pim->global_scope.bsm_frag_tag,
pimd/pim_bsm.c:1376:		pim_bsm_frags_free(&pim_ifp->pim->global_scope);
pimd/pim_bsm.c:1377:		pim_ifp->pim->global_scope.bsm_frag_tag = frag_tag;
pimd/pim_bsm.c:1390:		bsm_frags_add_tail(pim_ifp->pim->global_scope.bsm_frags,
pimd/pim_msdp.h:220:	thread_add_read(mp->pim->msdp.master, pim_msdp_read, mp, mp->fd,       \
pimd/pim_msdp.h:224:	thread_add_write(mp->pim->msdp.master, pim_msdp_write, mp, mp->fd,     \
pimd/subdir.am:70:	yang/frr-pim-rp.yang.c \
pimd/subdir.am:137:	yang/frr-pim-rp.yang.c \
pimd/pim_nht.c:57:	ret = zclient_send_rnh(zclient, command, p, false, pim->vrf->vrf_id);
pimd/pim_nht.c:66:			pim->vrf->name, ret);
pimd/pim_nht.c:81:	pnc = hash_lookup(pim->rpf_hash, &lookup);
pimd/pim_nht.c:99:	pnc = hash_get(pim->rpf_hash, pnc, hash_alloc_intern);
pimd/pim_nht.c:105:		   &pnc->rpf.rpf_addr, pim->vrf->name);
pimd/pim_nht.c:144:				__func__, addr, pim->vrf->name);
pimd/pim_nht.c:181:	pnc = hash_lookup(pim->rpf_hash, &lookup);
pimd/pim_nht.c:187:			frr_each (rb_pim_upstream, &pim->upstream_head,
pimd/pim_nht.c:216:				__func__, addr, pim->vrf->name,
pimd/pim_nht.c:228:			hash_release(pim->rpf_hash, pnc);
pimd/pim_nht.c:269:		ifp = if_lookup_by_index(first_ifindex, pim->vrf->vrf_id);
pimd/pim_nht.c:347:		ifp = if_lookup_by_index(first_ifindex, pim->vrf->vrf_id);
pimd/pim_nht.c:357:					addr_str, pim->vrf->name);
pimd/pim_nht.c:370:					__func__, ifp->name, pim->vrf->name,
pimd/pim_nht.c:384:						pim->vrf->name);
pimd/pim_nht.c:455:			__func__, up->sg_str, pim->vrf->name,
pimd/pim_nht.c:530:		if (pim->ecmp_rebalance_enable == 0) {
pimd/pim_nht.c:578:							grp_str, pim->vrf->name,
pimd/pim_nht.c:594:			if_lookup_by_index(nh_node->ifindex, pim->vrf->vrf_id);
pimd/pim_nht.c:604:	if (pim->ecmp_enable) {
pimd/pim_nht.c:630:					addr_str, pim->vrf->name);
pimd/pim_nht.c:644:					__func__, ifp->name, pim->vrf->name,
pimd/pim_nht.c:661:						pim->vrf->name);
pimd/pim_nht.c:695:					__func__, buf2, buf3, pim->vrf->name,
pimd/pim_nht.c:697:					pim->ecmp_enable);
pimd/pim_nht.c:778:							  pim->vrf->vrf_id);
pimd/pim_nht.c:798:						 pim->vrf->vrf_id);
pimd/pim_nht.c:805:						pim->vrf->name,
pimd/pim_nht.c:816:					__func__, &nhr.prefix, pim->vrf->name,
pimd/pim_nht.c:836:						pim->vrf->name,
pimd/pim_nht.c:872:			__func__, &nhr.prefix, pim->vrf->name, nhr.nexthop_num,
pimd/pim_nht.c:907:			   __func__, addr_str, pim->vrf->name,
pimd/pim_nht.c:932:				__func__, addr_str, pim->vrf->name);
pimd/pim_nht.c:945:					     pim->vrf->vrf_id);
pimd/pim_nht.c:957:	if (pim->ecmp_enable) {
pimd/pim_nht.c:983:					addr_str, pim->vrf->name);
pimd/pim_nht.c:994:					__func__, ifp->name, pim->vrf->name,
pimd/pim_nht.c:1006:					   ifp->name, pim->vrf->name, nbr);
pimd/pim_nht.c:1015:						pim->vrf->name, addr_str);
pimd/pim_nht.c:1030:					ifp->name, pim->vrf->name,
pimd/pim_nht.c:1073:				__func__, addr_str, pim->vrf->name);
pimd/pim_nht.c:1082:			ifindex2ifname(ifindex, pim->vrf->vrf_id),
pimd/pim_nht.c:1083:			pim->vrf->name, addr_str);
pimd/pim_nht.c:1091:				__func__, vif_index, pim->vrf->name, addr_str);
pimd/pim_upstream.c:112:	frr_each (rb_pim_upstream, &pim->upstream_head, child) {
pimd/pim_upstream.c:195:			__func__, name, up->sg_str, pim->vrf->name,
pimd/pim_upstream.c:208:			   pim->vrf->name, up->sg_str, up->flags);
pimd/pim_upstream.c:233:		if (pim->upstream_sg_wheel)
pimd/pim_upstream.c:234:			wheel_remove_item(pim->upstream_sg_wheel, up);
pimd/pim_upstream.c:253:	rb_pim_upstream_del(&pim->upstream_head, up);
pimd/pim_upstream.c:427:		if (pim->rp_keep_alive_time == old_rp_ka_time)
pimd/pim_upstream.c:428:			pim->rp_keep_alive_time = PIM_RP_KEEPALIVE_PERIOD;
pimd/pim_upstream.c:602:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_upstream.c:620:						    pim->regiface,
pimd/pim_upstream.c:633:						    pim->regiface,
pimd/pim_upstream.c:706:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_upstream.c:758:						up, pim->keep_alive_time);
pimd/pim_upstream.c:881:	rb_pim_upstream_add(&pim->upstream_head, up);
pimd/pim_upstream.c:928:		wheel_add_item(pim->upstream_sg_wheel, up);
pimd/pim_upstream.c:955:				up, pim->keep_alive_time);
pimd/pim_upstream.c:998:				up->pim->vxlan.peerlink_rif) &&
pimd/pim_upstream.c:1023:	up = rb_pim_upstream_find(&pim->upstream_head, &lookup);
pimd/pim_upstream.c:1182:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_upstream.c:1293:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_upstream.c:1303:				__func__, neigh_str, up->sg_str, pim->vrf->name,
pimd/pim_upstream.c:1409:	pim_channel_del_oif(up->channel_oil, pim->regiface,
pimd/pim_upstream.c:1451:		pim_upstream_keep_alive_timer_start(up, pim->keep_alive_time);
pimd/pim_upstream.c:1475:				up->sg_str, pim->vrf->name);
pimd/pim_upstream.c:1740:			   __func__, up->sg_str, pim->vrf->name,
pimd/pim_upstream.c:1748:		pim_channel_add_oif(up->channel_oil, pim->regiface,
pimd/pim_upstream.c:1778:		     > pim->keep_alive_time)
pimd/pim_upstream.c:1836:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_upstream.c:1934:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_upstream.c:1974:	while ((up = rb_pim_upstream_first(&pim->upstream_head))) {
pimd/pim_upstream.c:1978:	rb_pim_upstream_fini(&pim->upstream_head);
pimd/pim_upstream.c:1980:	if (pim->upstream_sg_wheel)
pimd/pim_upstream.c:1981:		wheel_delete(pim->upstream_sg_wheel);
pimd/pim_upstream.c:1982:	pim->upstream_sg_wheel = NULL;
pimd/pim_upstream.c:2058:				__func__, up->sg_str, pim->vrf->name,
pimd/pim_upstream.c:2073:					up->sg_str, pim->vrf->name);
pimd/pim_upstream.c:2080:		pim_upstream_keep_alive_timer_start(up, pim->keep_alive_time);
pimd/pim_upstream.c:2083:		pim_upstream_keep_alive_timer_start(up, pim->keep_alive_time);
pimd/pim_upstream.c:2108:				   __func__, up->sg_str, pim->vrf->name);
pimd/pim_upstream.c:2124:				__func__, up->sg_str, pim->vrf->name);
pimd/pim_upstream.c:2136:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_upstream.c:2143:		pim_channel_add_oif(up->channel_oil, pim->regiface,
pimd/pim_upstream.c:2153:	if (pim->spt.plist && strcmp(pim->spt.plist, pname) == 0) {
pimd/pim_upstream.c:2183:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_upstream.c:2191:			pim_channel_del_oif(up->channel_oil, pim->regiface,
pimd/pim_upstream.c:2198:			pim_channel_add_oif(up->channel_oil, pim->regiface,
pimd/pim_upstream.c:2202:			pim_channel_del_oif(up->channel_oil, pim->regiface,
pimd/pim_upstream.c:2211:	snprintf(name, sizeof(name), "PIM %s Timer Wheel", pim->vrf->name);
pimd/pim_upstream.c:2212:	pim->upstream_sg_wheel =
pimd/pim_upstream.c:2216:	rb_pim_upstream_init(&pim->upstream_head);
pimd/pim_iface.c:63:		pim->iface_vif_index[i] = 0;
pimd/pim_iface.c:70:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_iface.c:191:	pim_ifp->pim->mcast_if_count++;
pimd/pim_iface.c:215:	pim_ifp->pim->mcast_if_count--;
pimd/pim_iface.c:931:		if (pim->iface_vif_index[i] == 0)
pimd/pim_iface.c:992:	pim_ifp->pim->iface_vif_index[pim_ifp->mroute_vif_index] = 1;
pimd/pim_iface.c:1019:	pim_ifp->pim->iface_vif_index[pim_ifp->mroute_vif_index] = 0;
pimd/pim_iface.c:1032:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_iface.c:1053:	ifp = if_lookup_by_index(ifindex, pim->vrf->vrf_id);
pimd/pim_iface.c:1479:	if (!pim->regiface) {
pimd/pim_iface.c:1480:		if (pim->vrf->vrf_id == VRF_DEFAULT)
pimd/pim_iface.c:1484:				 pim->vrf->data.l.table_id);
pimd/pim_iface.c:1486:		pim->regiface = if_create_name(pimreg_name, pim->vrf->vrf_id);
pimd/pim_iface.c:1487:		pim->regiface->ifindex = PIM_OIF_PIM_REGISTER_VIF;
pimd/pim_iface.c:1489:		pim_if_new(pim->regiface, false, false, true,
pimd/pim_iface.c:1496:		pim->regiface->configured = true;
pimd/pim_iface.c:1606:		if (pim->mcast_if_count < MAXVIFS)
pimd/pim_iface.c:1723:	if (pim && pim->vxlan.term_if == ifp)
pimd/pim_static.c:99:	for (ALL_LIST_ELEMENTS_RO(pim->static_routes, node, s_route)) {
pimd/pim_static.c:175:		listnode_add(pim->static_routes, s_route);
pimd/pim_static.c:199:			listnode_delete(pim->static_routes, s_route);
pimd/pim_static.c:250:	for (ALL_LIST_ELEMENTS(pim->static_routes, node, nextnode, s_route)) {
pimd/pim_static.c:287:				listnode_delete(pim->static_routes, s_route);
pimd/pim_static.c:338:	for (ALL_LIST_ELEMENTS_RO(pim->static_routes, node, sroute)) {
pimd/pim_errors.c:2: * PIM-specific error messages.
pimd/TODO:3:    http://tools.ietf.org/wg/pim/draft-ietf-pim-port/
pimd/TODO:4:    PORT=PIM-Over-Reliable-Transport
pimd/TODO:46:    https://datatracker.ietf.org/doc/draft-wijnands-pim-neighbor-reduction/
pimd/TODO:54:    https://datatracker.ietf.org/doc/draft-liu-pim-single-stream-multicast-frr/
pimd/TODO:64:    http://tools.ietf.org/html/draft-cai-pim-mtid-00
pimd/pim_mroute.c:59:	if (pim->vrf->vrf_id != VRF_DEFAULT) {
pimd/pim_mroute.c:62:			data = pim->vrf->data.l.table_id;
pimd/pim_mroute.c:63:			err = setsockopt(pim->mroute_socket, IPPROTO_IP,
pimd/pim_mroute.c:69:					__FILE__, __func__, pim->mroute_socket,
pimd/pim_mroute.c:84:		err = setsockopt(pim->mroute_socket, IPPROTO_IP,
pimd/pim_mroute.c:89:				__FILE__, __func__, pim->mroute_socket,
pimd/pim_mroute.c:100:		if (setsockopt(pim->mroute_socket, IPPROTO_IP, IP_PKTINFO,
pimd/pim_mroute.c:104:				pim->mroute_socket, errno,
pimd/pim_mroute.c:110:	setsockopt_so_recvbuf(pim->mroute_socket, 1024 * 1024 * 8);
pimd/pim_mroute.c:112:	flags = fcntl(pim->mroute_socket, F_GETFL, 0);
pimd/pim_mroute.c:115:			  pim->mroute_socket, errno, safe_strerror(errno));
pimd/pim_mroute.c:116:		close(pim->mroute_socket);
pimd/pim_mroute.c:119:	if (fcntl(pim->mroute_socket, F_SETFL, flags | O_NONBLOCK)) {
pimd/pim_mroute.c:121:			  pim->mroute_socket, errno, safe_strerror(errno));
pimd/pim_mroute.c:122:		close(pim->mroute_socket);
pimd/pim_mroute.c:131:		err = setsockopt(pim->mroute_socket, IPPROTO_IP, opt, &upcalls,
pimd/pim_mroute.c:141:			"PIM-SM will not work properly on this platform, until the ability to receive the WRVIFWHOLE upcall");
pimd/pim_mroute.c:226:	pim_upstream_keep_alive_timer_start(up, pim_ifp->pim->keep_alive_time);
pimd/pim_mroute.c:277:				up, pim_ifp->pim->keep_alive_time);
pimd/pim_mroute.c:354:	  RFC 4601 4.8.2.  PIM-SSM-Only Routers
pimd/pim_mroute.c:480:	if (ifp == pim->regiface) {
pimd/pim_mroute.c:547:				up, pim_ifp->pim->keep_alive_time);
pimd/pim_mroute.c:568:			up, pim_ifp->pim->keep_alive_time);
pimd/pim_mroute.c:612:		ifp = if_lookup_by_index(ifindex, pim->vrf->vrf_id);
pimd/pim_mroute.c:634:				__func__, pim->vrf->name, ifp->name, igmp,
pimd/pim_mroute.c:663:				pim->mroute_socket, &msg->im_src, &msg->im_dst, ifp->name,
pimd/pim_mroute.c:669:			return pim_mroute_msg_wrongvif(pim->mroute_socket, ifp,
pimd/pim_mroute.c:672:			return pim_mroute_msg_nocache(pim->mroute_socket, ifp,
pimd/pim_mroute.c:675:			return pim_mroute_msg_wholepkt(pim->mroute_socket, ifp,
pimd/pim_mroute.c:679:				pim->mroute_socket, ifp, (const char *)msg);
pimd/pim_mroute.c:700:		rd = pim_socket_recvfromto(pim->mroute_socket, (uint8_t *)buf,
pimd/pim_mroute.c:711:				__func__, rd, pim->mroute_socket, errno,
pimd/pim_mroute.c:731:	thread_add_read(router->master, mroute_read, pim, pim->mroute_socket,
pimd/pim_mroute.c:732:			&pim->thread);
pimd/pim_mroute.c:737:	THREAD_OFF(pim->thread);
pimd/pim_mroute.c:756:		if (pim->vrf->vrf_id != VRF_DEFAULT
pimd/pim_mroute.c:758:				  pim->vrf->name, strlen(pim->vrf->name))) {
pimd/pim_mroute.c:768:	pim->mroute_socket = fd;
pimd/pim_mroute.c:774:		pim->mroute_socket = -1;
pimd/pim_mroute.c:778:	pim->mroute_socket_creation = pim_time_monotonic_sec();
pimd/pim_mroute.c:790:			pim->mroute_socket, errno, safe_strerror(errno));
pimd/pim_mroute.c:794:	if (close(pim->mroute_socket)) {
pimd/pim_mroute.c:796:			  pim->mroute_socket, errno, safe_strerror(errno));
pimd/pim_mroute.c:801:	pim->mroute_socket = -1;
pimd/pim_mroute.c:821:			   pim_ifp->pim->vrf->name);
pimd/pim_mroute.c:847:	err = setsockopt(pim_ifp->pim->mroute_socket, IPPROTO_IP, MRT_ADD_VIF,
pimd/pim_mroute.c:857:			__func__, pim_ifp->pim->mroute_socket, ifp->ifindex,
pimd/pim_mroute.c:874:			   pim_ifp->pim->vrf->name);
pimd/pim_mroute.c:879:	err = setsockopt(pim_ifp->pim->mroute_socket, IPPROTO_IP, MRT_DEL_VIF,
pimd/pim_mroute.c:884:			__FILE__, __func__, pim_ifp->pim->mroute_socket,
pimd/pim_mroute.c:964:	pim->mroute_add_last = pim_time_monotonic_sec();
pimd/pim_mroute.c:965:	++pim->mroute_add_events;
pimd/pim_mroute.c:991:	err = setsockopt(pim->mroute_socket, IPPROTO_IP, MRT_ADD_MFC,
pimd/pim_mroute.c:998:		err = setsockopt(pim->mroute_socket, IPPROTO_IP, MRT_ADD_MFC,
pimd/pim_mroute.c:1005:			__FILE__, __func__, pim->mroute_socket, errno,
pimd/pim_mroute.c:1013:			   pim->vrf->name,
pimd/pim_mroute.c:1166:	pim->mroute_del_last = pim_time_monotonic_sec();
pimd/pim_mroute.c:1167:	++pim->mroute_del_events;
pimd/pim_mroute.c:1180:	err = setsockopt(pim->mroute_socket, IPPROTO_IP, MRT_DEL_MFC,
pimd/pim_mroute.c:1186:				__FILE__, __func__, pim->mroute_socket, errno,
pimd/pim_mroute.c:1194:			   pim->vrf->name,
pimd/pim_mroute.c:1214:		c_oil->cc.lastused = 100 * pim->keep_alive_time;
pimd/pim_mroute.c:1232:	if (ioctl(pim->mroute_socket, SIOCGETSGCNT, &sgreq)) {
pimd/pim_vty.c:171:	struct pim_ssm *ssm = pim->ssm_info;
pimd/pim_vty.c:174:	if (pim->vrf->vrf_id == VRF_DEFAULT)
pimd/pim_vty.c:182:	if (!pim->send_v6_secondary) {
pimd/pim_vty.c:189:	if (pim->vrf->vrf_id == VRF_DEFAULT) {
pimd/pim_vty.c:208:	if (pim->keep_alive_time != PIM_KEEPALIVE_PERIOD) {
pimd/pim_vty.c:210:			pim->keep_alive_time);
pimd/pim_vty.c:213:	if (pim->rp_keep_alive_time != (unsigned int)PIM_RP_KEEPALIVE_PERIOD) {
pimd/pim_vty.c:215:			pim->rp_keep_alive_time);
pimd/pim_vty.c:223:	if (pim->register_plist) {
pimd/pim_vty.c:225:			pim->register_plist);
pimd/pim_vty.c:228:	if (pim->spt.switchover == PIM_SPT_INFINITY) {
pimd/pim_vty.c:229:		if (pim->spt.plist)
pimd/pim_vty.c:232:				spaces, pim->spt.plist);
pimd/pim_vty.c:239:	if (pim->ecmp_rebalance_enable) {
pimd/pim_vty.c:242:	} else if (pim->ecmp_enable) {
pimd/pim_vty.c:247:	if (pim->igmp_watermark_limit != 0) {
pimd/pim_vty.c:249:			pim->igmp_watermark_limit);
pimd/pim_vty.c:253:	if (pim->ssmpingd_list) {
pimd/pim_vty.c:257:		for (ALL_LIST_ELEMENTS_RO(pim->ssmpingd_list, node, ss)) {
pimd/pim_vty.c:266:	if (pim->msdp.hold_time != PIM_MSDP_PEER_HOLD_TIME
pimd/pim_vty.c:267:	    || pim->msdp.keep_alive != PIM_MSDP_PEER_KA_TIME
pimd/pim_vty.c:268:	    || pim->msdp.connection_retry != PIM_MSDP_PEER_CONNECT_RETRY_TIME) {
pimd/pim_vty.c:270:			pim->msdp.hold_time, pim->msdp.keep_alive);
pimd/pim_vty.c:271:		if (pim->msdp.connection_retry
pimd/pim_vty.c:273:			vty_out(vty, " %u", pim->msdp.connection_retry);
pimd/pim_vty.c:292:		FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_nb_config.c:199:	pim->spt.switchover = spt;
pimd/pim_nb_config.c:201:	switch (pim->spt.switchover) {
pimd/pim_nb_config.c:203:		XFREE(MTYPE_PIM_PLIST_NAME, pim->spt.plist);
pimd/pim_nb_config.c:210:		XFREE(MTYPE_PIM_PLIST_NAME, pim->spt.plist);
pimd/pim_nb_config.c:213:			pim->spt.plist = XSTRDUP(MTYPE_PIM_PLIST_NAME, plist);
pimd/pim_nb_config.c:223:	int result = pim_ssm_range_set(pim, pim->vrf->vrf_id, plist);
pimd/pim_nb_config.c:328:		yang_dnode_getf(dnode, "%s/frr-pim:pim/pim-enable", if_xpath);
pimd/pim_nb_config.c:613:		pim->ecmp_enable = yang_dnode_get_bool(args->dnode, NULL);
pimd/pim_nb_config.c:636:		pim->ecmp_rebalance_enable =
pimd/pim_nb_config.c:660:		pim->keep_alive_time = yang_dnode_get_uint16(args->dnode, NULL);
pimd/pim_nb_config.c:684:		pim->rp_keep_alive_time = yang_dnode_get_uint16(args->dnode,
pimd/pim_nb_config.c:741:		pim->send_v6_secondary = yang_dnode_get_bool(args->dnode, NULL);
pimd/pim_nb_config.c:988:		pim->msdp.hold_time = yang_dnode_get_uint16(args->dnode, NULL);
pimd/pim_nb_config.c:1012:		pim->msdp.keep_alive = yang_dnode_get_uint16(args->dnode, NULL);
pimd/pim_nb_config.c:1036:		pim->msdp.connection_retry =
pimd/pim_nb_config.c:1453:		XFREE(MTYPE_PIM_PLIST_NAME, pim->register_plist);
pimd/pim_nb_config.c:1454:		pim->register_plist = XSTRDUP(MTYPE_PIM_PLIST_NAME, plist);
pimd/pim_nb_config.c:1477:		XFREE(MTYPE_PIM_PLIST_NAME, pim->register_plist);
pimd/pim_nb_config.c:1528: * XPath: /frr-interface:lib/interface/frr-pim:pim/pim-enable
pimd/pim_nb_config.c:2170:		oif = if_lookup_by_name(oifname, pim->vrf->vrf_id);
pimd/pim_nb_config.c:2229:		oif = if_lookup_by_name(oifname, pim->vrf->vrf_id);
pimd/pim_nb_config.c:2248:		oif = if_lookup_by_name(oifname, pim->vrf->vrf_id);
pimd/pim_nb_config.c:2287: * XPath: /frr-routing:routing/control-plane-protocols/control-plane-protocol/frr-pim:pim/address-family/frr-pim-rp:rp/static-rp/rp-list
pimd/pim_nb_config.c:2357: * XPath: /frr-routing:routing/control-plane-protocols/control-plane-protocol/frr-pim:pim/address-family/frr-pim-rp:rp/static-rp/rp-list/group-list
pimd/pim_nb_config.c:2415: * XPath: /frr-routing:routing/control-plane-protocols/control-plane-protocol/frr-pim:pim/address-family/frr-pim-rp:rp/static-rp/rp-list/prefix-list
pimd/TROUBLESHOOTING:9:! . runnning both PIM-SSM and IGMPv3
pimd/TROUBLESHOOTING:23:! . runnning only PIM-SSM, not IGMPv3
pimd/pim_cmd.h:83:	vrf = (vrf) ? vrf : pim->vrf;
pimd/pim_vxlan.h:125:	return pim->vxlan.term_if_cfg == ifp;
pimd/pim_cmd.c:140:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:189:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:236:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:296:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:381:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:504:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:609:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:824:				       vrf_id_to_name(pim->vrf->vrf_id));
pimd/pim_cmd.c:830:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:947:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:1057:			frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:1224:			frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:1339:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:1417:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:1430:		frr_each (rb_pim_upstream, &pim->upstream_head, up)
pimd/pim_cmd.c:1523:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:1614:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:1772:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:1823:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:2026:	frr_each (rb_pim_oil, &pim->channel_oil_head, c_oil) {
pimd/pim_cmd.c:2251:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:2317:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:2472:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:2685:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:2758:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:2785:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:2845:			      pim->rpf_cache_refresh_last);
pimd/pim_cmd.c:2852:			pim_time_timer_remain_msec(pim->rpf_cache_refresher));
pimd/pim_cmd.c:2854:				    pim->rpf_cache_refresh_requests);
pimd/pim_cmd.c:2856:				    pim->rpf_cache_refresh_events);
pimd/pim_cmd.c:2860:				    pim->nexthop_lookups);
pimd/pim_cmd.c:2862:				    pim->nexthop_lookups_avoided);
pimd/pim_cmd.c:2873:			pim_time_timer_remain_msec(pim->rpf_cache_refresher),
pimd/pim_cmd.c:2874:			(long long)pim->rpf_cache_refresh_requests,
pimd/pim_cmd.c:2875:			(long long)pim->rpf_cache_refresh_events,
pimd/pim_cmd.c:2876:			refresh_uptime, (long long)pim->nexthop_lookups,
pimd/pim_cmd.c:2877:			(long long)pim->nexthop_lookups_avoided);
pimd/pim_cmd.c:2889:			      pim->scan_oil_last);
pimd/pim_cmd.c:2891:			      pim->mroute_add_last);
pimd/pim_cmd.c:2893:			      pim->mroute_del_last);
pimd/pim_cmd.c:2899:		uptime_scan_oil, (long long)pim->scan_oil_events,
pimd/pim_cmd.c:2900:		uptime_mroute_add, (long long)pim->mroute_add_events,
pimd/pim_cmd.c:2901:		uptime_mroute_del, (long long)pim->mroute_del_events);
pimd/pim_cmd.c:2922:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:3000:		ifp = if_lookup_by_index(first_ifindex, pim->vrf->vrf_id);
pimd/pim_cmd.c:3019:		pim->rpf_hash->count);
pimd/pim_cmd.c:3023:	hash_walk(pim->rpf_hash, pim_print_pnc_cache_walkcb, &cwd);
pimd/pim_cmd.c:3036:	count = bsm_frags_count(pim->global_scope.bsm_frags);
pimd/pim_cmd.c:3047:	frr_each (bsm_frags, pim->global_scope.bsm_frags, bsfrag) {
pimd/pim_cmd.c:3195:	if (pim->global_scope.current_bsr.s_addr == INADDR_ANY)
pimd/pim_cmd.c:3199:		pim_inet4_dump("<bsr?>", pim->global_scope.current_bsr, bsr_str,
pimd/pim_cmd.c:3209:	for (rn = route_top(pim->global_scope.bsrp_table); rn;
pimd/pim_cmd.c:3326:		json_object_int_add(json, "bsmRx", pim->bsm_rcvd);
pimd/pim_cmd.c:3327:		json_object_int_add(json, "bsmTx", pim->bsm_sent);
pimd/pim_cmd.c:3328:		json_object_int_add(json, "bsmDropped", pim->bsm_dropped);
pimd/pim_cmd.c:3333:			pim->bsm_rcvd);
pimd/pim_cmd.c:3335:			pim->bsm_sent);
pimd/pim_cmd.c:3337:			pim->bsm_dropped);
pimd/pim_cmd.c:3343:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3394:	pim->bsm_rcvd = 0;
pimd/pim_cmd.c:3395:	pim->bsm_sent = 0;
pimd/pim_cmd.c:3396:	pim->bsm_dropped = 0;
pimd/pim_cmd.c:3399:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3424:		json_object_int_add(json, "totalGroups", pim->igmp_group_count);
pimd/pim_cmd.c:3426:				    pim->igmp_watermark_limit);
pimd/pim_cmd.c:3428:		vty_out(vty, "Total IGMP groups: %u\n", pim->igmp_group_count);
pimd/pim_cmd.c:3430:			pim->igmp_watermark_limit ? "Set" : "Not Set",
pimd/pim_cmd.c:3431:			pim->igmp_watermark_limit);
pimd/pim_cmd.c:3437:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3556:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3623:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3696:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3757:	if (pim->global_scope.current_bsr.s_addr == INADDR_ANY) {
pimd/pim_cmd.c:3760:				pim->global_scope.current_bsr_first_ts);
pimd/pim_cmd.c:3762:				pim->global_scope.current_bsr_last_ts);
pimd/pim_cmd.c:3766:		pim_inet4_dump("<bsr?>", pim->global_scope.current_bsr,
pimd/pim_cmd.c:3770:				(now - pim->global_scope.current_bsr_first_ts));
pimd/pim_cmd.c:3772:				now - pim->global_scope.current_bsr_last_ts);
pimd/pim_cmd.c:3775:	switch (pim->global_scope.state) {
pimd/pim_cmd.c:3793:				    pim->global_scope.current_bsr_prio);
pimd/pim_cmd.c:3795:				    pim->global_scope.bsm_frag_tag);
pimd/pim_cmd.c:3807:			pim->global_scope.current_bsr_prio,
pimd/pim_cmd.c:3808:			pim->global_scope.bsm_frag_tag,
pimd/pim_cmd.c:3825:	FOR_ALL_INTERFACES (pim->vrf, ifp)
pimd/pim_cmd.c:3828:	FOR_ALL_INTERFACES (pim->vrf, ifp)
pimd/pim_cmd.c:3836:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:3994:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:4029:	while ((up = rb_pim_upstream_first(&pim->upstream_head)))
pimd/pim_cmd.c:4151:	nht_p.u.prefix4 = pim->global_scope.current_bsr;
pimd/pim_cmd.c:4159:	pim->global_scope.accept_nofwd_bsm = false;
pimd/pim_cmd.c:4160:	pim->global_scope.state = ACCEPT_ANY;
pimd/pim_cmd.c:4161:	pim->global_scope.current_bsr.s_addr = INADDR_ANY;
pimd/pim_cmd.c:4162:	pim->global_scope.current_bsr_prio = 0;
pimd/pim_cmd.c:4163:	pim->global_scope.current_bsr_first_ts = 0;
pimd/pim_cmd.c:4164:	pim->global_scope.current_bsr_last_ts = 0;
pimd/pim_cmd.c:4165:	pim->global_scope.bsm_frag_tag = 0;
pimd/pim_cmd.c:4166:	pim_bsm_frags_free(&pim->global_scope);
pimd/pim_cmd.c:4168:	pim_bs_timer_stop(&pim->global_scope);
pimd/pim_cmd.c:4170:	for (rn = route_top(pim->global_scope.bsrp_table); rn;
pimd/pim_cmd.c:4176:		rpnode = route_node_lookup(pim->rp_table, &bsgrp->group);
pimd/pim_cmd.c:4217:			listnode_delete(pim->rp_list, rp_info);
pimd/pim_cmd.c:4233:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:4924:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:5077:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:5125:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_cmd.c:5201:			"L: EVPN-MLAG Entry, I:PIM-MLAG Entry, P: Peer Entry\n");
pimd/pim_cmd.c:5899:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_cmd.c:5912:		if (ioctl(pim->mroute_socket, SIOCGETVIFCNT, &vreq)) {
pimd/pim_cmd.c:5966:	struct vrf *vrf = pim->vrf;
pimd/pim_cmd.c:5977:	vty_out(vty, " %d(%s)\n", pim->mroute_socket, vrf->name);
pimd/pim_cmd.c:5980:			now - pim->mroute_socket_creation);
pimd/pim_cmd.c:5994:	vty_out(vty, "PIM ECMP: %s\n", pim->ecmp_enable ? "Enable" : "Disable");
pimd/pim_cmd.c:5996:		pim->ecmp_rebalance_enable ? "Enable" : "Disable");
pimd/pim_cmd.c:6150:	frr_each (rb_pim_oil, &pim->channel_oil_head, c_oil) {
pimd/pim_cmd.c:6359:	for (ALL_LIST_ELEMENTS_RO(pim->static_routes, node, s_route)) {
pimd/pim_cmd.c:6584:	frr_each(rb_pim_oil, &pim->channel_oil_head, c_oil) {
pimd/pim_cmd.c:6594:	for (ALL_LIST_ELEMENTS_RO(pim->static_routes, node, sr)) {
pimd/pim_cmd.c:6669:	frr_each (rb_pim_oil, &pim->channel_oil_head, c_oil)
pimd/pim_cmd.c:6672:	for (ALL_LIST_ELEMENTS_RO(pim->static_routes, node, sr))
pimd/pim_cmd.c:6752:	frr_each (rb_pim_oil, &pim->channel_oil_head, c_oil) {
pimd/pim_cmd.c:6766:	for (ALL_LIST_ELEMENTS_RO(pim->static_routes, node, s_route)) {
pimd/pim_cmd.c:6948:	if (!pim->ssmpingd_list)
pimd/pim_cmd.c:6953:	for (ALL_LIST_ELEMENTS_RO(pim->ssmpingd_list, node, ss)) {
pimd/pim_cmd.c:7390:	pim->igmp_watermark_limit = limit;
pimd/pim_cmd.c:7405:	pim->igmp_watermark_limit = 0;
pimd/pim_cmd.c:7751:	struct pim_ssm *ssm = pim->ssm_info;
pimd/pim_cmd.c:8049:					   "%s/pim-enable", pim_if_xpath);
pimd/pim_cmd.c:8145:				"%s/frr-pim:pim/pim-enable", VTY_CURR_XPATH);
pimd/pim_cmd.c:8216:				"%s/frr-pim:pim/pim-enable", VTY_CURR_XPATH);
pimd/pim_cmd.c:8259:				"%s/frr-pim:pim/pim-enable", VTY_CURR_XPATH);
pimd/pim_cmd.c:8302:				"%s/frr-pim:pim/pim-enable", VTY_CURR_XPATH);
pimd/pim_cmd.c:8345:				"%s/frr-pim:pim/pim-enable", VTY_CURR_XPATH);
pimd/pim_cmd.c:8476:		pim_str_sg_dump(&sg), pim->keep_alive_time);
pimd/pim_cmd.c:8477:	pim_upstream_keep_alive_timer_start(up, pim->keep_alive_time);
pimd/pim_cmd.c:8494:		nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:8513:	nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY, "true");
pimd/pim_cmd.c:8533:	nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY, "true");
pimd/pim_cmd.c:8544:	nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY, "true");
pimd/pim_cmd.c:8574:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:8606:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:8637:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:8751:		nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:8755:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9465:		nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9469:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9520:		nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9524:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9559:		nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9563:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9618:		nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:9622:			nb_cli_enqueue_change(vty, "./pim-enable", NB_OP_MODIFY,
pimd/pim_cmd.c:10026:	if (SLIST_EMPTY(&pim->msdp.mglist)) {
pimd/pim_cmd.c:10036:	SLIST_FOREACH (mg, &pim->msdp.mglist, mg_entry)
pimd/pim_cmd.c:10076:		SLIST_FOREACH (mg, &pim->msdp.mglist, mg_entry)
pimd/pim_cmd.c:10111:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.peer_list, mpnode, mp)) {
pimd/pim_cmd.c:10164:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.peer_list, mpnode, mp)) {
pimd/pim_cmd.c:10348:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_cmd.c:10479:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_cmd.c:10562:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_cmd.c:10591:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_cmd.c:10771:	hash_iterate(pim->vxlan.sg_hash, pim_show_vxlan_sg_hash_entry, &cwd);
pimd/pim_cmd.c:10807:	hash_iterate(pim->vxlan.sg_hash, pim_show_vxlan_sg_hash_entry, &cwd);
pimd/pim_instance.c:43:	if (pim->ssm_info) {
pimd/pim_instance.c:44:		pim_ssm_terminate(pim->ssm_info);
pimd/pim_instance.c:45:		pim->ssm_info = NULL;
pimd/pim_instance.c:48:	if (pim->static_routes)
pimd/pim_instance.c:49:		list_delete(&pim->static_routes);
pimd/pim_instance.c:60:	if (pim->rpf_hash) {
pimd/pim_instance.c:61:		hash_clean(pim->rpf_hash, (void *)pim_rp_list_hash_clean);
pimd/pim_instance.c:62:		hash_free(pim->rpf_hash);
pimd/pim_instance.c:63:		pim->rpf_hash = NULL;
pimd/pim_instance.c:72:	XFREE(MTYPE_PIM_PLIST_NAME, pim->spt.plist);
pimd/pim_instance.c:73:	XFREE(MTYPE_PIM_PLIST_NAME, pim->register_plist);
pimd/pim_instance.c:75:	pim->vrf = NULL;
pimd/pim_instance.c:88:	pim->mcast_if_count = 0;
pimd/pim_instance.c:89:	pim->keep_alive_time = PIM_KEEPALIVE_PERIOD;
pimd/pim_instance.c:90:	pim->rp_keep_alive_time = PIM_RP_KEEPALIVE_PERIOD;
pimd/pim_instance.c:92:	pim->ecmp_enable = false;
pimd/pim_instance.c:93:	pim->ecmp_rebalance_enable = false;
pimd/pim_instance.c:95:	pim->vrf = vrf;
pimd/pim_instance.c:97:	pim->spt.switchover = PIM_SPT_IMMEDIATE;
pimd/pim_instance.c:98:	pim->spt.plist = NULL;
pimd/pim_instance.c:104:	pim->rpf_hash = hash_create_size(256, pim_rpf_hash_key, pim_rpf_equal,
pimd/pim_instance.c:110:	pim->ssm_info = pim_ssm_init();
pimd/pim_instance.c:112:	pim->static_routes = list_new();
pimd/pim_instance.c:113:	pim->static_routes->del = (void (*)(void *))pim_static_route_free;
pimd/pim_instance.c:115:	pim->send_v6_secondary = 1;
pimd/pim_instance.c:127:	pim->last_route_change_time = -1;
pimd/pim_instance.c:130:	pim->msdp.hold_time = PIM_MSDP_PEER_HOLD_TIME;
pimd/pim_instance.c:131:	pim->msdp.keep_alive = PIM_MSDP_PEER_KA_TIME;
pimd/pim_instance.c:132:	pim->msdp.connection_retry = PIM_MSDP_PEER_CONNECT_RETRY_TIME;
pimd/pim_vxlan.c:43:/* pim-vxlan global info */
pimd/pim_vxlan.c:295: *       encapsulated again in a pim-register header.
pimd/pim_vxlan.c:374:		if (pim->regiface)
pimd/pim_vxlan.c:376:					pim->regiface->info);
pimd/pim_vxlan.c:390:	pim_upstream_keep_alive_timer_start(up, vxlan_sg->pim->keep_alive_time);
pimd/pim_vxlan.c:442:		pim->vxlan.peerlink_rif : NULL;
pimd/pim_vxlan.c:453:			pim->vxlan.peerlink_rif) ?
pimd/pim_vxlan.c:454:		pim->vxlan.peerlink_rif : pim->vxlan.default_iif;
pimd/pim_vxlan.c:542:	return pim->vxlan.term_if ?
pimd/pim_vxlan.c:543:		(struct pim_interface *)pim->vxlan.term_if->info : NULL;
pimd/pim_vxlan.c:681:	vxlan_sg->term_oif = vxlan_sg->pim->vxlan.term_if;
pimd/pim_vxlan.c:734:	vxlan_sg = hash_get(pim->vxlan.sg_hash, vxlan_sg, hash_alloc_intern);
pimd/pim_vxlan.c:739:	if (pim->vxlan.sg_hash->count == 1) {
pimd/pim_vxlan.c:753:	return hash_lookup(pim->vxlan.sg_hash, &lookup);
pimd/pim_vxlan.c:800:	hash_release(pim->vxlan.sg_hash, vxlan_sg);
pimd/pim_vxlan.c:842:	/* if address is not available suppress the pim-register */
pimd/pim_vxlan.c:902:	if (pim->vxlan.default_iif == ifp)
pimd/pim_vxlan.c:905:	old_iif = pim->vxlan.default_iif;
pimd/pim_vxlan.c:912:	pim->vxlan.default_iif = ifp;
pimd/pim_vxlan.c:925:	if (pim->vxlan.sg_hash)
pimd/pim_vxlan.c:926:		hash_iterate(pim->vxlan.sg_hash,
pimd/pim_vxlan.c:939:			  pim->vxlan.peerlink_rif) ||
pimd/pim_vxlan.c:947:					pim->vxlan.peerlink_rif ?
pimd/pim_vxlan.c:948:					pim->vxlan.peerlink_rif->name : "-");
pimd/pim_vxlan.c:993:	if (pim->vxlan.peerlink_rif == ifp)
pimd/pim_vxlan.c:996:	old_iif = pim->vxlan.peerlink_rif;
pimd/pim_vxlan.c:1004:	pim->vxlan.peerlink_rif = ifp;
pimd/pim_vxlan.c:1016:		if (pim->vxlan.sg_hash)
pimd/pim_vxlan.c:1017:			hash_iterate(pim->vxlan.sg_hash,
pimd/pim_vxlan.c:1028:		if (pim->vxlan.sg_hash)
pimd/pim_vxlan.c:1029:			hash_iterate(pim->vxlan.sg_hash,
pimd/pim_vxlan.c:1060:	if (pim->vxlan.term_if == ifp)
pimd/pim_vxlan.c:1065:			pim->vxlan.term_if ? pim->vxlan.term_if->name : "-",
pimd/pim_vxlan.c:1068:	pim->vxlan.term_if = ifp;
pimd/pim_vxlan.c:1069:	if (pim->vxlan.sg_hash)
pimd/pim_vxlan.c:1070:		hash_iterate(pim->vxlan.sg_hash,
pimd/pim_vxlan.c:1079:	if (pim->vrf->vrf_id != VRF_DEFAULT)
pimd/pim_vxlan.c:1089:	if (pim->vxlan.term_if_cfg == ifp)
pimd/pim_vxlan.c:1098:	if (pim->vrf->vrf_id != VRF_DEFAULT)
pimd/pim_vxlan.c:1101:	if (pim->vxlan.default_iif == ifp)
pimd/pim_vxlan.c:1104:	if (pim->vxlan.peerlink_rif == ifp)
pimd/pim_vxlan.c:1107:	if (pim->vxlan.term_if == ifp)
pimd/pim_vxlan.c:1117:	if (pim->vxlan.term_if_cfg == ifp)
pimd/pim_vxlan.c:1122:			   pim->vxlan.term_if_cfg ?
pimd/pim_vxlan.c:1123:			   pim->vxlan.term_if_cfg->name : "-",
pimd/pim_vxlan.c:1126:	pim->vxlan.term_if_cfg = ifp;
pimd/pim_vxlan.c:1148:	struct interface *ifp = pim->vxlan.term_if_cfg;
pimd/pim_vxlan.c:1155:	pim->vxlan.term_if_cfg = NULL;
pimd/pim_vxlan.c:1170:		"PIM %s vxlan SG hash", pim->vrf->name);
pimd/pim_vxlan.c:1171:	pim->vxlan.sg_hash = hash_create(pim_vxlan_sg_hash_key_make,
pimd/pim_vxlan.c:1177:	if (pim->vxlan.sg_hash) {
pimd/pim_vxlan.c:1178:		hash_clean(pim->vxlan.sg_hash,
pimd/pim_vxlan.c:1180:		hash_free(pim->vxlan.sg_hash);
pimd/pim_vxlan.c:1181:		pim->vxlan.sg_hash = NULL;
pimd/pim_zebra.c:230:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_zebra.c:381:	pim->scan_oil_last = pim_time_monotonic_sec();
pimd/pim_zebra.c:382:	++pim->scan_oil_events;
pimd/pim_zebra.c:384:	frr_each (rb_pim_oil, &pim->channel_oil_head, c_oil)
pimd/pim_zebra.c:395:	pim->rpf_cache_refresh_last = pim_time_monotonic_sec();
pimd/pim_zebra.c:396:	++pim->rpf_cache_refresh_events;
pimd/pim_zebra.c:405:	++pim->rpf_cache_refresh_requests;
pimd/pim_zebra.c:409:	if (pim->rpf_cache_refresher) {
pimd/pim_zebra.c:423:			      &pim->rpf_cache_refresher);
pimd/pim_zebra.c:542:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/CAVEATS:20:   (PIM-SSM-Only Routers) of RFC4601. That's because only
pimd/CAVEATS:23:C6 PIM implementation currently does not support IPv6. PIM-SSM
pimd/pim_errors.h:2: * PIM-specific error messages.
pimd/pim_zlookup.c:178:			   pim->vrf->name);
pimd/pim_zlookup.c:211:			  __func__, addr_str, pim->vrf->name, raddr_str);
pimd/pim_zlookup.c:241:				pim->vrf->name);
pimd/pim_zlookup.c:294:			else if (pim->send_v6_secondary)
pimd/pim_zlookup.c:317:					pim->vrf->name);
pimd/pim_zlookup.c:337:			   pim->vrf->name);
pimd/pim_zlookup.c:349:	if (pim->vrf->vrf_id == VRF_UNKNOWN) {
pimd/pim_zlookup.c:352:			__func__, pim->vrf->name);
pimd/pim_zlookup.c:359:			      pim->vrf->vrf_id);
pimd/pim_zlookup.c:406:	pim->nexthop_lookups++;
pimd/pim_zlookup.c:423:					pim->vrf->name);
pimd/pim_zlookup.c:462:						pim->vrf->name,
pimd/pim_zlookup.c:490:				addr_str, pim->vrf->name,
pimd/pim_zlookup.c:505:			__func__, lookup, max_lookup, addr_str, pim->vrf->name);
pimd/pim_zlookup.c:540:			c_oil->pim->vrf->name);
pimd/pim_zlookup.c:548:			      c_oil->pim->vrf->vrf_id);
pimd/pim_zlookup.c:597:				c_oil->pim->vrf->name);
pimd/pim_rp.c:53:/* Cleanup pim->rpf_hash each node data */
pimd/pim_rp.c:109:	pim->rp_list = list_new();
pimd/pim_rp.c:110:	pim->rp_list->del = (void (*)(void *))pim_rp_info_free;
pimd/pim_rp.c:111:	pim->rp_list->cmp = pim_rp_list_cmp;
pimd/pim_rp.c:113:	pim->rp_table = route_table_init();
pimd/pim_rp.c:120:		list_delete(&pim->rp_list);
pimd/pim_rp.c:121:		route_table_finish(pim->rp_table);
pimd/pim_rp.c:130:	listnode_add(pim->rp_list, rp_info);
pimd/pim_rp.c:132:	rn = route_node_get(pim->rp_table, &rp_info->group);
pimd/pim_rp.c:142:	if (pim->rp_table)
pimd/pim_rp.c:143:		route_table_finish(pim->rp_table);
pimd/pim_rp.c:144:	pim->rp_table = NULL;
pimd/pim_rp.c:146:	if (pim->rp_list)
pimd/pim_rp.c:147:		list_delete(&pim->rp_list);
pimd/pim_rp.c:160:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:178:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:198:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:242:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:263:	rn = route_node_match(pim->rp_table, group);
pimd/pim_rp.c:309:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:350:	FOR_ALL_INTERFACES (pim->vrf, ifp) {
pimd/pim_rp.c:470:		for (ALL_LIST_ELEMENTS(pim->rp_list, node, nnode,
pimd/pim_rp.c:506:		for (ALL_LIST_ELEMENTS(pim->rp_list, node, nnode,
pimd/pim_rp.c:536:			frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_rp.c:618:	listnode_add_sort(pim->rp_list, rp_info);
pimd/pim_rp.c:619:	rn = route_node_get(pim->rp_table, &rp_info->group);
pimd/pim_rp.c:627:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_rp.c:724:		bsgrp = pim_bsm_get_bsgrp_node(&pim->global_scope, &group);
pimd/pim_rp.c:768:		frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_rp.c:792:	listnode_delete(pim->rp_list, rp_info);
pimd/pim_rp.c:795:		rn = route_node_get(pim->rp_table, &rp_info->group);
pimd/pim_rp.c:816:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_rp.c:858:	rn = route_node_lookup(pim->rp_table, &group);
pimd/pim_rp.c:893:	listnode_delete(pim->rp_list, rp_info);
pimd/pim_rp.c:899:	listnode_add_sort(pim->rp_list, rp_info);
pimd/pim_rp.c:901:	frr_each (rb_pim_upstream, &pim->upstream_head, up) {
pimd/pim_rp.c:944:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:973:	if (pim->rp_list == NULL)
pimd/pim_rp.c:976:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:1015:	if (pim->rp_list == NULL)
pimd/pim_rp.c:1018:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:1156:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:1184:	if (if_lookup_exact_address(&dest_addr, AF_INET, pim->vrf->vrf_id))
pimd/pim_rp.c:1207:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:1331:	for (ALL_LIST_ELEMENTS_RO(pim->rp_list, node, rp_info)) {
pimd/pim_rp.c:1348:				nh_node->ifindex, pim->vrf->vrf_id);
pimd/pim_msdp_packet.c:325:	s = stream_dup(pim->msdp.work_obuf);
pimd/pim_msdp_packet.c:341:		for (ALL_LIST_ELEMENTS_RO(pim->msdp.peer_list, mpnode, mp)) {
pimd/pim_msdp_packet.c:356:	stream_reset(pim->msdp.work_obuf);
pimd/pim_msdp_packet.c:361:	stream_putc(pim->msdp.work_obuf, PIM_MSDP_V4_SOURCE_ACTIVE);
pimd/pim_msdp_packet.c:362:	stream_putw(pim->msdp.work_obuf,
pimd/pim_msdp_packet.c:364:	stream_putc(pim->msdp.work_obuf, curr_tlv_ecnt);
pimd/pim_msdp_packet.c:365:	stream_put_ipv4(pim->msdp.work_obuf, rp.s_addr);
pimd/pim_msdp_packet.c:372:	stream_put3(sa->pim->msdp.work_obuf, 0 /* reserved */);
pimd/pim_msdp_packet.c:373:	stream_putc(sa->pim->msdp.work_obuf, 32 /* sprefix len */);
pimd/pim_msdp_packet.c:374:	stream_put_ipv4(sa->pim->msdp.work_obuf, sa->sg.grp.s_addr);
pimd/pim_msdp_packet.c:375:	stream_put_ipv4(sa->pim->msdp.work_obuf, sa->sg.src.s_addr);
pimd/pim_msdp_packet.c:384:	int local_cnt = pim->msdp.local_cnt;
pimd/pim_msdp_packet.c:392:					     pim->msdp.originator_id);
pimd/pim_msdp_packet.c:394:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.sa_list, sanode, sa)) {
pimd/pim_msdp_packet.c:414:				pim, local_cnt, pim->msdp.originator_id);
pimd/pim_msdp_packet.c:431:	for (ALL_LIST_ELEMENTS_RO(pim->msdp.peer_list, mpnode, mp)) {
pimd/pim_msdp_packet.c:524:	for (ALL_LIST_ELEMENTS_RO(mp->pim->msdp.peer_list, peer_node, peer)) {
isisd/isis_main.c:240:	master = im->master;
isisd/isisd.c:139:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:151:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:163:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:174:	im->isis = list_new();
isisd/isisd.c:175:	im->master = master;
isisd/isisd.c:214:	listnode_add(im->isis, isis);
isisd/isisd.c:223:	listnode_delete(im->isis, isis);
isisd/isisd.c:315:	if (!CHECK_FLAG(im->options, F_ISIS_UNIT_TEST))
isisd/isisd.c:521:	if (!CHECK_FLAG(im->options, F_ISIS_UNIT_TEST))
isisd/isisd.c:718:	if (listcount(im->isis) == 0)
isisd/isisd.c:721:	for (ALL_LIST_ELEMENTS(im->isis, node, nnode, isis))
isisd/isisd.c:731:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis)) {
isisd/isisd.c:754:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis)) {
isisd/isisd.c:956:			for (ALL_LIST_ELEMENTS_RO(im->isis, inode, isis)) {
isisd/isisd.c:1152:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis)) {
isisd/isisd.c:1236:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis)) {
isisd/isisd.c:1941:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:2014:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:2146:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:2301:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isisd.c:2759:	for (ALL_LIST_ELEMENTS_RO(im->isis, inode, isis)) {
isisd/isis_route.c:208:		if (CHECK_FLAG(im->options, F_ISIS_UNIT_TEST)) {
isisd/isis_sr.c:1063:	for (ALL_LIST_ELEMENTS_RO(im->isis, inode, isis)) {
isisd/isis_dynhn.c:50:	if (!CHECK_FLAG(im->options, F_ISIS_UNIT_TEST))
isisd/isis_spf.c:1913:	if (CHECK_FLAG(im->options, F_ISIS_UNIT_TEST))
isisd/isis_spf.c:2165:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isis_spf.c:2442:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isis_spf.c:2656:			for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isis_misc.c:468:	if (isis && !CHECK_FLAG(im->options, F_ISIS_UNIT_TEST))
isisd/isis_misc.c:471:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis)) {
isisd/isis_zebra.c:996:	for (ALL_LIST_ELEMENTS_RO(im->isis, node, isis))
isisd/isis_te.c:328:			for (ALL_LIST_ELEMENTS_RO(im->isis, inode, isis)) {
isisd/isis_te.c:497:		for (ALL_LIST_ELEMENTS_RO(im->isis, inode, isis)) {
README.md:21:* PIM-SM/MSDP
zebra/zebra_evpn.c:66:	{VXLAN_FLOOD_PIM_SM, "PIM-SM"},
zebra/zebra_evpn.h:107:	/* PIM-SM MDT group for BUM flooding */
lib/vxlan.h:46: * using PIM-SM, PIM-Bidir etc.
